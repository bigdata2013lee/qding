
[supervisord]
pidfile=/opt/jmws/var/supervisord.pid ; supervisord的pidfile文件
logfile=/opt/jmws/log/spvd/supervisord.log ; 主要的进程日志配置
logfile_maxbytes=4MB        ; 最大日志体积，默认50MB
logfile_backups=2           ; 日志文件备份数目，默认10
loglevel=info                ; 日志级别，默认info; 还有:debug,warn,trace

;minfds=1024                  ; 最小的有效文件描述符，默认1024
;minprocs=200                 ; 最小的有效进程描述符，默认200
;nodaemon=false               ; 是否以守护进程的方式启动
;umask=022                   ; 进程文件的umask，默认200
;user=chrism                 ; 默认为当前用户，如果为root则必填
;identifier=supervisor       ; supervisord的表示符, 默认时'supervisor'
;directory=/tmp              ; 默认不cd到当前目录
;nocleanup=true              ; 不在启动的时候清除临时文件，默认false
;childlogdir=/tmp            ; ('AUTO' child log dir, default $TEMP)
;environment=KEY=value       ; 初始键值对传递给进程
;strip_ansi=false            ; (strip ansi escape codes in logs; def. false)


[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock

[unix_http_server]
file=/tmp/supervisor.sock
chmod=0700


[program:qdevt_bus]
command=python3 manage.py runscript %(program_name)s
process_name=%(program_name)s
directory=/opt/jmws
stdout_logfile=/opt/jmws/log/spvd/%(program_name)s.log
stderr_logfile=/opt/jmws/log/spvd/%(program_name)s.log

[program:qd_comm_evts]
command=python3 manage.py runscript %(program_name)s
process_name=%(program_name)s
directory=/opt/jmws
stdout_logfile=/opt/jmws/log/spvd/%(program_name)s.log
stderr_logfile=/opt/jmws/log/spvd/%(program_name)s.log


[program:interval_evt_trigger]
command=python3 manage.py runscript %(program_name)s
process_name=%(program_name)s
directory=/opt/jmws
stdout_logfile=/opt/jmws/log/spvd/%(program_name)s.log
stderr_logfile=/opt/jmws/log/spvd/%(program_name)s.log


[program:sync_tasks]
command=python3 manage.py runscript %(program_name)s
process_name=%(program_name)s
directory=/opt/jmws
stdout_logfile=/opt/jmws/log/spvd/%(program_name)s.log
stderr_logfile=/opt/jmws/log/spvd/%(program_name)s.log



;[program:theprogramname]
;command=/bin/cat              ; the program (relative uses PATH, can take args)
;process_name=%(program_name)s ; process_name expr (default %(program_name)s)
;numprocs=1                    ; number of processes copies to start (def 1)
;directory=/tmp                ; directory to cwd to before exec (def no cwd)
;umask=022                     ; umask for process (default None)
;priority=999                  ; the relative start priority (default 999)
;autostart=true                ; start at supervisord start (default: true)
;autorestart=unexpected        ; whether/when to restart (default: unexpected)
;startsecs=1                   ; number of secs prog must stay running (def. 1)
;startretries=3                ; max # of serial start failures (default 3)
;exitcodes=0,2                 ; 'expected' exit codes for process (default 0,2)
;stopsignal=QUIT               ; signal used to kill process (default TERM)
;stopwaitsecs=10               ; max num secs to wait b4 SIGKILL (default 10)
;stopasgroup=false             ; send stop signal to the UNIX process group (default false)
;killasgroup=false             ; SIGKILL the UNIX process group (def false)
;user=chrism                   ; setuid to this UNIX account to run the program
;redirect_stderr=true          ; redirect proc stderr to stdout (default false)
;stdout_logfile=/a/path        ; stdout log path, NONE for none; default AUTO
;stdout_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)
;stdout_logfile_backups=10     ; # of stdout logfile backups (default 10)
;stdout_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
;stdout_events_enabled=false   ; emit events on stdout writes (default false)
;stderr_logfile=/a/path        ; stderr log path, NONE for none; default AUTO
;stderr_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)
;stderr_logfile_backups=10     ; # of stderr logfile backups (default 10)
;stderr_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
;stderr_events_enabled=false   ; emit events on stderr writes (default false)
;environment=A=1,B=2           ; process environment additions (def no adds)
;serverurl=AUTO                ; override serverurl computation (childutils)



